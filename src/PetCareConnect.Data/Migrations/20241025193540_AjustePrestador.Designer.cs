// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetCareConnect.Data.Contexts;

#nullable disable

namespace PetCareConnect.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241025193540_AjustePrestador")]
    partial class AjustePrestador
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetCareConnect.Business.Models.CategoriaProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TB_CATEGORIAPRODUTO", (string)null);
                });

            modelBuilder.Entity("PetCareConnect.Business.Models.Comprador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TB_COMPRADOR", (string)null);
                });

            modelBuilder.Entity("PetCareConnect.Business.Models.EnderecoComprador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("CompradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CompradorId")
                        .IsUnique()
                        .HasFilter("[CompradorId] IS NOT NULL");

                    b.ToTable("TB_ENDERECO_COMPRADOR", (string)null);
                });

            modelBuilder.Entity("PetCareConnect.Business.Models.EnderecoPrestador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("PrestadorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PrestadorId")
                        .IsUnique()
                        .HasFilter("[PrestadorId] IS NOT NULL");

                    b.ToTable("TB_ENDERECO_PRESTADOR", (string)null);
                });

            modelBuilder.Entity("PetCareConnect.Business.Models.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Porte")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Raca")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CompradorId");

                    b.ToTable("TB_PET", (string)null);
                });

            modelBuilder.Entity("PetCareConnect.Business.Models.Prestador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoPrestador")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TB_PRESTADOR", (string)null);
                });

            modelBuilder.Entity("PetCareConnect.Business.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TB_PRODUTO", (string)null);
                });

            modelBuilder.Entity("PetCareConnect.Business.Models.Servico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TB_SERVICO", (string)null);
                });

            modelBuilder.Entity("PetCareConnect.Business.Models.EnderecoComprador", b =>
                {
                    b.HasOne("PetCareConnect.Business.Models.Comprador", "Comprador")
                        .WithOne("Endereco")
                        .HasForeignKey("PetCareConnect.Business.Models.EnderecoComprador", "CompradorId");

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("PetCareConnect.Business.Models.EnderecoPrestador", b =>
                {
                    b.HasOne("PetCareConnect.Business.Models.Prestador", "Prestador")
                        .WithOne("Endereco")
                        .HasForeignKey("PetCareConnect.Business.Models.EnderecoPrestador", "PrestadorId");

                    b.Navigation("Prestador");
                });

            modelBuilder.Entity("PetCareConnect.Business.Models.Pet", b =>
                {
                    b.HasOne("PetCareConnect.Business.Models.Comprador", "Comprador")
                        .WithMany("Pets")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("PetCareConnect.Business.Models.Comprador", b =>
                {
                    b.Navigation("Endereco");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("PetCareConnect.Business.Models.Prestador", b =>
                {
                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
